#!/bin/bash

file=$1;
new_loc=$(pwd);

#Removes the HTTP structure in a hostname
remove_http() {
 	sed -E -e 's/(https:\/\/|http:\/\/|)//g' -e 's/\/.*//g' <<< $1 | tee -a $new_loc/hosts $new_loc/nohttp_hosts > /dev/null;
}

#Expands IP address ranges
expand_range() {
		#If host is an IP range matches this pattern 10.10.10.1-10:
		if [[ $1 =~ ^([0-9]{1,3}+(\.|)){4}+\-[0-9]{1,3}$ ]]; then

			#Take each line, obtain the digits indicating the range such as 1-10
			input=$(echo "$1" |  grep -o '[0-9]\{1,3\}\b' | grep -Eo '.{1,3}' | tail -2);

			#Obtain the first three octets of the range, to glue back together later
			head=$(echo "$1" | sed -e 's/\.[^.]*$//');
			
			#for every number in the sequence, glue the original three octets to the new IPs and put them in a new file
			for i in $(seq $input); do
				echo "$head.$i" >> $new_loc/hosts;
			done
		#If the range is CIDR notation
		elif [[ $1 =~ ^([0-9]{1,3}+(\.|)){4}+\/[0-9]{1,2}$ ]]; then
			nmap -sL -n $1 | grep -o '([0-9]{1,3}+(\.|)){4}' >> $new_loc/hosts;

		#If a host within the file doesn't need exanding
		elif [[ $1 =~ ^([0-9]{1,3}+(\.|$)){4} ]]; then
			echo $1 >> $new_loc/hosts;
		else
			echo "fail: $1";
		fi
}

while read host; do
	if [[ $host =~ ([0-9]{1,3}+(\.|)){4} ]]; then
		expand_range $host;	
	elif [[ $host =~ http ]]; then
		echo $host | tee -a $new_loc/http_hosts > /dev/null;
		remove_http $host;
	else

		echo $host >> $new_loc/hosts;
	fi
done < $file